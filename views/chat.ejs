<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <style>
        /* General Styles */
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background: #f4f4f9;
            margin: 0;
            padding: 0;
        }

        h2 {
            color: #333;
            margin-top: 20px;
        }

        /* Chat Container */
        #chatBox {
            width: 90%;
            max-width: 500px;
            height: 400px;
            border-radius: 10px;
            background: #fff;
            padding: 15px;
            overflow-y: auto;
            margin: 20px auto;
            display: flex;
            flex-direction: column;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
            border: none;
        }

        /* Chat Messages */
        .message {
            padding: 12px;
            margin: 5px;
            border-radius: 18px;
            max-width: 75%;
            word-wrap: break-word;
            font-size: 14px;
            position: relative;
            box-shadow: 1px 2px 5px rgba(0, 0, 0, 0.1);
        }

        .sent {
            background: #DCF8C6;
            align-self: flex-end;
            text-align: right;
        }

        .received {
            background: #EAEAEA;
            align-self: flex-start;
            text-align: left;
        }

        .message small {
            display: block;
            font-size: 10px;
            color: #666;
            margin-top: 5px;
        }

        /* Chat Input & Button */
        .chat-container {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-bottom: 20px;
        }

        .chat-input {
            flex-grow: 1;
            width: 70%;
            max-width: 400px;
            padding: 10px;
            border-radius: 20px;
            border: 1px solid #ccc;
            font-size: 14px;
            outline: none;
        }

        .chat-input:focus {
            border-color: #007bff;
            box-shadow: 0px 0px 5px rgba(0, 123, 255, 0.5);
        }

        button {
            background: #007bff;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 14px;
            transition: 0.3s;
        }

        button:hover {
            background: #0056b3;
        }
    </style>
</head>
<body>
    <h2>Chat</h2>
    
    <!-- Hidden input fields to store IDs -->
    <input type="hidden" id="senderId" value="<%= senderId %>">
    <input type="hidden" id="receiverId" value="<%= receiverId %>">
    <input type="hidden" id="requestId" value="<%= requestId %>">

    <div id="chatBox">
        <% messages.forEach(message => { %>
            <div class="message <%= message.sender_id === senderId ? 'sent' : 'received' %>">
                <strong><%= message.sender_id === senderId ? "You" : "Them" %>:</strong>
                <%= message.message %>
                <small><%= new Date(message.timestamp).toLocaleString() %></small>
            </div>
        <% }); %>
    </div>

    <div class="chat-container">
        <input type="text" id="messageInput" class="chat-input" placeholder="Type a message...">
        <button id="sendBtn">Send</button>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const senderId = document.getElementById("senderId").value;
            const receiverId = document.getElementById("receiverId").value;
            const requestId = document.getElementById("requestId").value;
            const chatBox = document.getElementById("chatBox");
            const messageInput = document.getElementById("messageInput");
            const sendBtn = document.getElementById("sendBtn");

            messageInput.focus(); // Auto-focus on input field

            // Connect WebSocket
            const socket = new WebSocket("ws://localhost:5000");

            socket.onopen = () => {
                console.log("WebSocket Connected");
                socket.send(JSON.stringify({ type: "connect", userId: senderId }));
            };

            socket.onmessage = (event) => {
                const data = JSON.parse(event.data);
                console.log("ðŸ“© Received:", data);

                if (data.type === "chat") {
                    const msgDiv = document.createElement("div");
                    msgDiv.classList.add("message", data.senderId === senderId ? "sent" : "received");
                    msgDiv.innerHTML = `<strong>${data.senderId === senderId ? "You" : "Them"}:</strong> ${data.messageText} 
                                        <small>Just now</small>`;
                    chatBox.appendChild(msgDiv);
                    chatBox.scrollTop = chatBox.scrollHeight;
                }
            };

            sendBtn.addEventListener("click", () => {
                sendMessage();
            });

            messageInput.addEventListener("keypress", (e) => {
                if (e.key === "Enter") {
                    sendMessage();
                }
            });

            async function sendMessage() {
                const message = messageInput.value.trim();
                if (message === "") return;

                const newMessage = {
                    type: "chat",
                    senderId,
                    receiverId,
                    requestId,
                    messageText: message,
                };

                console.log("Sending message:", newMessage);
                socket.send(JSON.stringify(newMessage));

                try {
                    await fetch('/storeMessage', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(newMessage)
                    });
                } catch (error) {
                    console.error('Error storing message:', error);
                }

                const msgDiv = document.createElement("div");
                msgDiv.classList.add("message", "sent");
                msgDiv.innerHTML = `<strong>You:</strong> ${message} <small>Just now</small>`;
                chatBox.appendChild(msgDiv);
                chatBox.scrollTop = chatBox.scrollHeight;
                messageInput.value = "";
            }

        });
    </script>    
    
</body>
</html>
